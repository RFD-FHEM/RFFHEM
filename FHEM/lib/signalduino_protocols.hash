(
    "0"    => 
        {
            name			=> 'weather1',		# Logilink, NC, WS, TCM97001 etc.
			comment		=> 'Logilink, NC, WS, TCM97001 etc',
			id          	=> '0',
			one				=> [1,-8],
			zero			=> [1,-4],
			sync			=> [1,-18],		
			clockabs   		=> '500',		# not used now
			format     		=> 'twostate',  # not used now
			preamble		=> 's',			# prepend to converted message	 	
			postamble		=> '00',		# Append to converted message	 	
			clientmodule    => 'CUL_TCM97001',   # not used now
			#modulematch     => '^s[A-Fa-f0-9]+', # not used now
			length_min      => '24',
			length_max      => '42',
			paddingbits     => '8',				 # pad up to 8 bits, default is 4
        },
    "1"    => 
        {
            name			=> 'ConradRSL',			# 
			id          	=> '1',
			one				=> [2,-1],
			zero			=> [1,-2],
			sync			=> [1,-11],		
			clockabs   		=> '560',				# not used now
			format     		=> 'twostate',  		# not used now
			preamble		=> 'P1#',					# prepend to converted message	 	
			postamble		=> '',					# Append to converted message	 	
			clientmodule    => 'SD_RSL',   # not used now
			modulematch     => '^P1#[A-Fa-f0-9]{8}', 	# not used now
			length_min 		=> '20',   # 23
			length_max 		=> '40',   # 24

        },


    "2"    => 
        {
			name			=> 'AS, Self build arduino sensor',
			comment         => 'developModule. SD_AS module is only in github available',
			developId 		=> 'm',
			id          	=> '2',
			one				=> [1,-2],
			zero			=> [1,-1],
			sync			=> [1,-20],
			clockabs     	=> '500',		# not used now
			format 			=> 'twostate',	
			preamble		=> 'P2#',		# prepend to converted message		
			clientmodule    => 'SD_AS',   # not used now
			modulematch     => '^P2#.{7,8}',
			length_min      => '32',
			length_max      => '34',		# Don't know maximal lenth of a valid message
			paddingbits     => '8',		    # pad up to 8 bits, default is 4
	
        },
    "3"    => 
        {
            name			=> 'itv1',	
			id          	=> '3',
			one				=> [3,-1],
			zero			=> [1,-3],
			#float			=> [-1,3],		# not full supported now later use
			sync			=> [1,-31],
			clockabs     	=> -1,	# -1=auto	
			format 			=> 'twostate',	# not used now
			preamble		=> 'i',			
			clientmodule    => 'IT',   # not used now
			modulematch     => '^i......', # not used now
			length_min      => '24',
			#length_max      => '800',		# Don't know maximal lenth of a valid message

			},
    "3.1"    => 	# MS;P0=-11440;P1=-1121;P2=-416;P5=309;P6=1017;D=150516251515162516251625162516251515151516251625151;CP=5;SP=0;R=66;
			# MS;P1=309;P2=-1130;P3=1011;P4=-429;P5=-11466;D=15123412121234123412141214121412141212123412341234;CP=1;SP=5;R=38;  Gruppentaste, siehe Kommentar in sub SIGNALduino_bit2itv1
        {
            name			=> 'itv1_sync40',	
			comment		=> 'IT remote Control PAR 1000',
			id          	=> '3',
			one			=> [3,-1],
			zero			=> [1,-3],
			float			=> [1,-1],	# siehe Kommentar in sub SIGNALduino_bit2itv1
			sync			=> [1,-40],
			clockabs     	=> -1,	# -1=auto	
			format 			=> 'twostate',	# not used now
			preamble		=> 'i',			
			clientmodule    => 'IT',   # not used now
			modulematch     => '^i......', # not used now
			length_min      => '24',
			#length_max      => '800',		# Don't know maximal lenth of a valid message
			postDemodulation => \&SIGNALduino_bit2itv1,
			},
    "4"    => 
        {
            name			=> 'arctech2',	
			id          	=> '4',
			#one			=> [1,-5,1,-1],  
			#zero			=> [1,-1,1,-5],  
			one				=> [1,-5],  
			zero			=> [1,-1],  
			#float			=> [-1,3],		# not full supported now, for later use
			sync			=> [1,-14],
			clockabs     	=> -1,			# -1 = auto
			format 			=> 'twostate',	# tristate can't be migrated from bin into hex!
			preamble		=> 'i',			# Append to converted message	
			postamble		=> '00',		# Append to converted message	 	
			clientmodule    => 'IT',   		# not used now
			modulematch     => '^i......',  # not used now
			length_min      => '32',
			#length_max      => '76',		# Don't know maximal lenth of a valid message
		},
    "5"    => 			## Similar protocol as intertechno, but without sync
        {
            name			=> 'unitec6899',	
			id          	=> '5',
			one				=> [3,-1],
			zero			=> [1,-3],
			clockabs     	=> 500,			# -1 = auto
			format 			=> 'twostate',	# tristate can't be migrated from bin into hex!
			preamble		=> 'p5#',			# Append to converted message	
			clientmodule    => 'IT',   		# not used now
			modulematch     => '^i......',  # not used now
			length_min      => '24',

		},    
	
	"6"    => 			## Eurochron Protocol
        {
            name			=> 'weatherID6',	
			id          	=> '6',
			one				=> [1,-10],
			zero			=> [1,-5],
			sync			=> [1,-36],		# This special device has no sync
			clockabs     	=> 220,			# -1 = auto
			format 			=> 'twostate',	# tristate can't be migrated from bin into hex!
			preamble		=> 'u6#',			# Append to converted message	
			#clientmodule    => '',   	# not used now
			#modulematch     => '^u......',  # not used now
			length_min      => '24',

		},
	"7"    => 			## weather sensors like EAS800z
        {
            name			=> 'weatherID7',	
			comment		=> 'EAS800z, FreeTec NC-7344',
			id          	=> '7',
			one				=> [1,-4],
			zero			=> [1,-2],
			sync			=> [1,-8],		 
			clockabs     	=> 484,			
			format 			=> 'twostate',	
			preamble		=> 'P7#',		# prepend to converted message	
			clientmodule    => 'SD_WS07',   	# not used now
			modulematch     => '^P7#.{6}F.{2}', # not used now
			length_min      => '35',
			length_max      => '40',

		}, 
	"8"    => 			## TX3 (ITTX) Protocol
        {
            name			=> 'TX3 Protocol',	
			id          	=> '8',
			one				=> [1,-2],
			zero			=> [2,-2],
			#sync			=> [1,-8],		# 
			clockabs     	=> 470,			# 
			format 			=> 'pwm',	    # 
			preamble		=> 'TX',		# prepend to converted message	
			clientmodule    => 'CUL_TX',   	# not used now
			modulematch     => '^TX......', # not used now
			length_min      => '43',
			length_max      => '44',
			remove_zero     => 1,           # Removes leading zeros from output

		}, 	
	"9"    => 			## Funk Wetterstation CTW600
			{
      name			=> 'CTW 600',	
			comment		=> 'FunkWS WH1080/WH3080/CTW600',
			id          	=> '9',
			zero			=> [3,-2],
			one				=> [1,-2],
			#float			=> [-1,3],		# not full supported now, for later use
			#sync			=> [1,-8],		# 
			clockabs     	=> 480,			# -1 = auto undef=noclock
			format 			=> 'pwm',	    # tristate can't be migrated from bin into hex!
			preamble		=> 'P9#',		# prepend to converted message	
			clientmodule    => 'SD_WS09',   	# not used now
			#modulematch     => '^u9#.....',  # not used now
			length_min      => '60',
			length_max      => '120',

		}, 	
	"10"    => 			## Oregon Scientific 2
		{
            name			=> 'OSV2o3',	
			id          	=> '10',
			clockrange     	=> [300,520],			# min , max
			format 			=> 'manchester',	    # tristate can't be migrated from bin into hex!
			clientmodule    => 'OREGON',
			modulematch     => '^(3[8-9A-F]|[4-6][0-9A-F]|7[0-8]).*',
			length_min      => '64',
			length_max      => '220',
			method          => \&SIGNALduino_OSV2, # Call to process this message
			polarity        => 'invert',			
		}, 	
	"11"    => 			## Arduino Sensor
		{
            name			=> 'AS',	
			id          	=> '11',
			clockrange     	=> [380,425],			# min , max
			format 			=> 'manchester',	    # tristate can't be migrated from bin into hex!
			preamble		=> 'P2#',		# prepend to converted message	
			clientmodule    => 'SD_AS',   	# not used now
			modulematch     => '^P2#.{7,8}',
			length_min      => '52',
			length_max      => '56',
			method          => \&SIGNALduino_AS # Call to process this message
		}, 
	"12"    => 			## Hideki
		{
            name			=> 'Hideki protocol',	
			comment         => 'Hideki messages are sometimes received as inverted (check in sub)',
			id          	=> '12',
			clockrange     	=> [420,510],                   # min, max better for Bresser Sensors, OK for hideki/Hideki/TFA too     
			format 			=> 'manchester',	
			preamble		=> 'P12#',						# prepend to converted message	
			clientmodule    => 'hideki',   				# not used now
			modulematch     => '^P12#75.+',  						# not used now
			length_min      => '71',
			length_max      => '128',
			method          => \&SIGNALduino_Hideki,	# Call to process this message
			#polarity        => 'invert',			
			
		}, 	
	"13"    => 			## FLAMINGO  FA 21
			# https://github.com/RFD-FHEM/RFFHEM/issues/21
			# https://github.com/RFD-FHEM/RFFHEM/issues/233
		{
            name			=> 'FLAMINGO FA21',	
			id          	=> '13',
			one				=> [1,-2],
			zero			=> [1,-4],
			sync			=> [1,-20,10,-1],		
			clockabs		=> 800,
			format 			=> 'twostate',	  		
			preamble		=> 'P13#',				# prepend to converted message	
			clientmodule    => 'FLAMINGO',   				# not used now
			#modulematch     => 'P13#.*',  				# not used now
			length_min      => '24',
			length_max      => '26',
		}, 		
	# MU;P0=-1384;P1=815;P2=-2725;P3=-20001;P4=8159;P5=-891;D=01010121212121010101210101345101210101210101212101010101012121212101010121010134510121010121010121210101010101212121210101012101013451012101012101012121010101010121212121010101210101345101210101210101212101010101012121212101010121010134510121010121010121;CP=1;O;
	# MU;P0=-17201;P1=112;P2=-1419;P3=-28056;P4=8092;P5=-942;P6=777;P7=-2755;D=12134567676762626762626762626767676762626762626267626260456767676262676262676262676767676262676262626762626045676767626267626267626267676767626267626262676262604567676762626762626762626767676762626762626267626260456767676262676262676262676767676262676262;CP=6;O;
	"13.1"    => 			## FLAMINGO FA20 
		{
            name			=> 'FLAMINGO FA21 / LM-101LD',
			comment		=> 'FLAMINGO oder Unitec Rauchmelder',
			id          	=> '13',
			one				=> [1,-1.8],
			zero			=> [1,-3.5],
			start			=> [-23.5,10,-1],
			clockabs		=> 800,
			format 			=> 'twostate',	  		
			preamble		=> 'P13#',				# prepend to converted message	
			clientmodule    => 'FLAMINGO',   				# not used now
			#modulematch     => 'P13#.*',  				# not used now
			length_min      => '24',
			length_max      => '24',
		}, 		
	"13.2" => ##  MS;P1=-2708;P2=796;P3=-1387;P4=-8477;P5=8136;P6=-904;D=2456212321212323232321212121212121212123212321212121;CP=2;SP=4;
		{
			name		=> 'LM-101LD Rauchm',
			comment		=> 'Unitec Rauchmelder',
			id		=> '13',
			zero		=> [1,-1.8], 	#
			one		=> [1,-3.5],   	# 
			sync		=> [1,-11,10,-1.2],	#
			clockabs     	=> 790,
			format 		=> 'twostate',	    # 
			preamble	=> 'P13#',	# prepend to converted message	
			clientmodule    => 'FLAMINGO',
			#modulematch     => '', # not used now
			length_min      => '24',
			length_max      => '24',
		},
	"14"    => 			## Heidemann HX
		{
            name			=> 'Heidemann HX',	
			id          	=> '14',
			one				=> [1,-2],
			zero			=> [1,-1],
			#float			=> [-1,3],				# not full supported now, for later use
			sync			=> [1,-14],				# 
			clockabs		=> 350,
			format 			=> 'twostate',	  		
			preamble		=> 'u14#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '10',
			length_max      => '20',
		}, 			
	"15"    => 			## TCM234759
			{
            name			=> 'TCM Bell',	
			id          	=> '15',
			one				=> [1,-1],
			zero			=> [1,-2],
			sync			=> [1,-45],				# 
			clockabs		=> 700,
			format 			=> 'twostate',	  		
			preamble		=> 'u15#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '10',
			length_max      => '20',
			#method          => \&SIGNALduino_Cresta	# Call to process this message
		}, 	
	"16" => # Rohrmotor24 und andere Funk Rolladen / Markisen Motoren
		{
            name			=> 'Dooya shutter',	
			id          	=> '16',
			one				=> [2,-1],
			zero			=> [1,-3],
			start           => [17,-5],
			clockabs		=> 280,
			format 			=> 'twostate',	  		
			preamble		=> 'P16#',				# prepend to converted message	
			clientmodule    => 'Dooya',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '39',
			length_max      => '40',
		}, 	
    "17"    => 
        {
            name			=> 'arctech / intertechno',
			id          	=> '17',
			one				=> [1,-5,1,-1],  
			zero			=> [1,-1,1,-5],  
			#one			=> [1,-5],  
			#zero			=> [1,-1],  
			sync			=> [1,-10],
			float			=> [1,-1,1,-1],
			end			=> [1,-40],
			clockabs     	=> -1,			# -1 = auto
			format 			=> 'twostate',	# tristate can't be migrated from bin into hex!
			preamble		=> 'i',			# Append to converted message	
			postamble		=> '00',		# Append to converted message	 	
			clientmodule    => 'IT',   		# not used now
			modulematch     => '^i......',  # not used now
			length_min      => '32',
			#length_max     => '76',		# Don't know maximal lenth of a valid message
			postDemodulation => \&SIGNALduino_bit2Arctec,
		},
	 "17.1"	=> # intertechno --> MU anstatt sonst MS (ID 17)
			# MU;P0=344;P1=-1230;P2=-200;D=01020201020101020102020102010102010201020102010201020201020102010201020101020102020102010201020102010201010200;CP=0;R=0;
			# MU;P0=346;P1=-1227;P2=-190;P4=-10224;P5=-2580;D=0102010102020101020201020101020102020102010102010201020102010201020201020102010201020101020102020102010102020102010201020104050201020102010102020101020201020101020102020102010102010201020102010201020201020102010201020101020102020102010102020102010201020;CP=0;R=0;
			# MU;P0=351;P1=-1220;P2=-185;D=01 0201 0102 020101020201020101020102020102010102010201020102010201020201020102010201020101020102020102010201020102010201020100;CP=0;R=0;
			# MU;P0=355;P1=-189;P2=-1222;P3=-10252;P4=-2604;D=01020201010201020201020101020102020102010201020102010201010201020102010201020201020101020102010201020102010201020 304 0102 01020102020101020201010201020201020101020102020102010201020102010201010201020102010201020201020101020102010201020102010201020 304 01020;CP=0;R=0;
			# https://www.sweetpi.de/blog/329/ein-ueberblick-ueber-433mhz-funksteckdosen-und-deren-protokolle
        {
			name			=> 'intertechno',
			comment 		=> 'PIR-1000 | ITT-1500',
			id          	=> '17.1',
			one				=> [1,-5,1,-1],
			zero			=> [1,-1,1,-5],
			clockabs    	=> 230,			# -1 = auto
			format 			=> 'twostate',	# tristate can't be migrated from bin into hex!
			preamble		=> 'i',			# Append to converted message	
			postamble		=> '00',		# Append to converted message	 	
			clientmodule    => 'IT',   		# not used now
			modulematch     => '^i......',  # not used now
			length_min      => '32',
			length_max     	=> '34',		# Don't know maximal lenth of a valid message
			postDemodulation => \&SIGNALduino_bit2Arctec,
	   },
	"18"    => 			## Oregon Scientific v1
		{
            name			=> 'OSV1',	
			id          	=> '18',
			clockrange     	=> [1400,1500],			# min , max
			format 			=> 'manchester',	    # tristate can't be migrated from bin into hex!
			preamble		=> '',					
			clientmodule    => 'OREGON',
			modulematch     => '^[0-9A-F].*',
			length_min      => '32',
			length_max      => '32',
			polarity        => 'invert',		    # invert bits
			method          => \&SIGNALduino_OSV1   # Call to process this message
		},
	#"19" => # nothing knowing about this 2015-09-28 01:25:40-MS;P0=-8916;P1=-19904;P2=390;P3=-535;P4=-1020;P5=12846;P6=1371;D=2120232323232324242423232323232323232320239;CP=2;SP=1;
	#
	#	{
    #       name			=> 'unknown19',	
	#		id          	=> '19',
	#		one				=> [1,-2],
	#		zero			=> [1,-1],
	#		sync			=> [1,-50,1,-22],				
	#		clockabs		=> 395,
	#		format 			=> 'twostate',	  		
	#		preamble		=> 'u19#',				# prepend to converted message	
	#		#clientmodule    => '',   				# not used now
	#		#modulematch     => '',  				# not used now
	#		length_min      => '16',
	#		length_max      => '32',
	#	}, 	 	
	"20" => #Livolo	
		{
            name			=> 'livolo',	
			id          	=> '20',
			one				=> [3],
			zero			=> [1],
			start			=> [5],				
			clockabs		=> 110,                  #can be 90-140
			format 			=> 'twostate',	  		
			preamble		=> 'u20#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '16',
			filterfunc      => 'SIGNALduino_filterSign',
		},
	"21" => #Einhell Garagentor	
		{
            name			=> 'einhell garagedoor',	
			id          	=> '21',
			one				=> [-3,1],
			zero			=> [-1,3],
			#sync			=> [-50,1],	
			start  			=> [-50,1],	
			clockabs		=> 400,                  #ca 400us
			format 			=> 'twostate',	  		
			preamble		=> 'u21#',				# prepend to converted message	
			#clientmodule   => '',   				# not used now
			#modulematch    => '',  				# not used now
			length_min      => '32',
			length_max      => '32',				
			paddingbits     => '1',					# This will disable padding 
		},
	"22" => #TX-EZ6 / Meteo	
		{
            name			=> 'TX-EZ6',	
			id          	=> '22',
			one				=> [1,-8],
			zero			=> [1,-3],
			sync			=> [1,16],				
			clockabs		=> 500,                  #ca 400us
			format 			=> 'twostate',	  		
			preamble		=> 'u22#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '40',
			#length_max      => '',				    # must be tested

		},
	"23" => # Pearl Sensor
		{
            name			=> 'perl unknown',	
			id          	=> '23',
			one				=> [1,-6],
			zero			=> [1,-1],
			sync			=> [1,-50],				
			clockabs		=> 200,                  #ca 200us
			format 			=> 'twostate',	  		
			preamble		=> 'u23#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '36',
			length_max      => '44',				

		},
	"24" => # visivon
		{
            name			=> 'visivon remote',	
			id          	=> '24',
			one			    => [3,-2],
			zero			=> [1,-5],
			#one			=> [3,-2],
			#zero			=> [1,-1],
			start           => [30,-5],
			clockabs		=> 150,                  #ca 150us
			format 			=> 'twostate',	  		
			preamble		=> 'u24#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '54',
			length_max      => '58',				

		},
		
	"25" => # LES remote for led lamp
		{
            name			=> 'les led remote',	
			id          	=> '25',
			one				=> [-2,1],
			zero			=> [-1,2],
			sync			=> [-46,1],				# this is a end marker, but we use this as a start marker
			clockabs		=> 350,                 #ca 350us
			format 			=> 'twostate',	  		
			preamble		=> 'u25#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '24',
			length_max      => '50',				# message has only 24 bit, but we get more than one message, calculation has to be corrected
		},
	"26" => # some remote code send by flamingo style remote controls
		{
            name			=> 'remote26',	
			id          	=> '26',
			one				=> [1,-3],
			zero			=> [3,-1],
#			sync			=> [1,-6],				# Message is not provided as MS, due to small fact
			start 			=> [1,-6],				# Message is not provided as MS, due to small fact
			clockabs		=> 380,                 #ca 380
			format 			=> 'twostate',	  		
			preamble		=> 'u26#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '24',
			length_max      => '24',				# message has only 24 bit, but we get more than one message, calculation has to be corrected
		},
	"27" => # some remote code, send by flamingo style remote controls
		{
            name			=> 'remote27',	
			id          	=> '27',
			one				=> [1,-2],
			zero			=> [2,-1],
			start			=> [6,-15],				# Message is not provided as MS, worakround is start
			clockabs		=> 480,                 #ca 480
			format 			=> 'twostate',	  		
			preamble		=> 'u27#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '24',
			length_max      => '24',				
		},
	"28" => # some remote code, send by aldi IC Ledspots
		{
	        name			=> 'IC Ledspot',	
			id          	=> '28',
			one				=> [1,-1],
			zero			=> [1,-2],
			start			=> [4,-5],				
			clockabs		=> 600,                 #ca 600
			format 			=> 'twostate',	  		
			preamble		=> 'u28#',				# prepend to converted message
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '8',
			length_max      => '8',				
		},
	"29" => # 
		{
            name			=> 'HT12e remote',	
			id          	=> '29',
			one				=> [-2,1],
			zero			=> [-1,2],
			#float          => [1,-1],	
			start			=> [-38,1],				# Message is not provided as MS, worakround is start
			clockabs		=> 220,                 #ca 220
			format 			=> 'tristate',	  		# there is a pause puls between words
			preamble		=> 'u29#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '10',
			length_max      => '12',				# message has only 10 bit but is paddet to 12
		},
	"30" => # a unitec remote door reed switch
		{
            name			=> 'unitec47031',	
			comment         => 'developModule. SD_UT module is only in github available',
			id          	=> '30',
			developId       => 'm',
			one				=> [-1,2],
			zero			=> [-2,1],
			start			=> [-33,1],				# Message is not provided as MS, worakround is start
			clockabs		=> 300,                 # ca 300 us
			format 			=> 'twostate',	  		# there is a pause puls between words
			preamble		=> 'u30#',				# prepend to converted message	
			clientmodule    => 'SD_UT',   			# not used now
			modulematch     => '^u30',  			# not used now
			length_min      => '12',
			length_max      => '12',				# message has only 10 bit but is paddet to 12
		},
	"31" => # Pollin Isotronic
		{
            name			=> 'pollin isotronic',	
			id          	=> '31',
			one				=> [-1,2],
			zero			=> [-2,1],
			start			=> [1],				
			clockabs		=> 600,                  
			format 			=> 'twostate',	  		
			preamble		=> 'u31#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '20',
			length_max      => '20',				

		},
	"32" => #FreeTec PE-6946 -> http://www.free-tec.de/Funkklingel-mit-Voic-PE-6946-919.shtml
    	{   
            name			=> 'freetec 6946',	
			id          	=> '32',
			one				=> [4,-2],
			zero			=> [1,-5],
			sync			=> [1,-49],				
			clockabs		=> 140,                 #ca 140us
			format 			=> 'twostate',	  		
			preamble		=> 'u32#',				# prepend to converted message	
			#clientmodule    => '',   				# not used now
			#modulematch     => '',  				# not used now
			length_min      => '24',
			length_max      => '24',				
    	},
    "33" => #Thermo-/Hygrosensor S014
	# MS;P0=-7871;P2=-1960;P3=578;P4=-3954;D=030323232323434343434323232323234343434323234343234343234343232323432323232323232343234;CP=3;SP=0;R=0;m=0;
    # sensor id=62, channel=1, temp=21.0555555555556, hum=76, bat=ok
    	{   
       		name			=> 'weather33',		
			id          	=> '33',
			one				=> [1,-8],
			zero			=> [1,-4],
			sync			=> [1,-15],
			clockabs   		=> '500',				# not used now
			format     		=> 'twostate',  		# not used now
			preamble		=> 'W33#',				# prepend to converted message	
			postamble		=> '',					# Append to converted message	 	
			clientmodule    => 'SD_WS',      		# not used now
			#modulematch     => '',     			# not used now
			length_min      => '42',
			length_max      => '44',
    	},
#    "34" =>   # replaced by 37
#     	 {   
#       		name			=> 'unknown34',		
#       		id          	=> '34',
#			one				=> [2,-1],
#			zero			=> [1,-2],
#			start			=> [3,-3,3,-3,3,-3,3,-3],
#			clockabs   		=> '240',		
#			format     		=> 'twostate',  		# not used now
#			preamble		=> 'u34#',				# prepend to converted message	
#			postamble		=> '',					# Append to converted message	 	
#			#clientmodule    => '',      			# not used now
#			#modulematch     => '',     			# not used now
#			length_min      => '40',
#			length_max      => '40',
 #   	},
     "35" =>
     	 {   
		# MS;P0=907;P1=-376;P2=266;P3=-1001;P6=-4860;D=2601010123230123012323230101012301230101010101230123012301;CP=2;SP=6;
			name		=> 'HE800',
			comment		=> 'Homeeasy',	
			id          	=> '35',
			one			=> [1,-4],
			zero			=> [3.4,-1],
			sync			=> [1,-18],
			clockabs   		=> '280',		
			format     		=> 'twostate',  		# not used now
			preamble		=> 'ih',				# prepend to converted message	
			postamble		=> '',					# Append to converted message	 	
			clientmodule    => 'IT',      			# not used now
			#modulematch     => '',     			# not used now
			length_min      => '28',
			length_max      => '40',
			postDemodulation => \&SIGNALduino_HE800,
    	},
     "36" =>
     	 {   
       		name			=> 'socket36',		
       		id          	=> '36',
			one				=> [1,-3],
			zero			=> [1,-1],
			start		 	=> [20,-20],
			clockabs   		=> '500',		
			format     		=> 'twostate',  		# not used now
			preamble		=> 'u36#',				# prepend to converted message	
			postamble		=> '',					# Append to converted message	 	
			#clientmodule    => '',      			# not used now
			#modulematch     => '',     			# not used now
			length_min      => '24',
			length_max      => '24',
    	},
    "37" =>	## Bresser 7009994
			# MU;P0=729;P1=-736;P2=483;P3=-251;P4=238;P5=-491;D=010101012323452323454523454545234523234545234523232345454545232345454545452323232345232340;CP=4;
			# MU;P0=-790;P1=-255;P2=474;P4=226;P6=722;P7=-510;D=721060606060474747472121212147472121472147212121214747212147474721214747212147214721212147214060606060474747472121212140;CP=4;R=216;
			# short pulse of 250 us followed by a 500 us gap is a 0 bit
			# long pulse of 500 us followed by a 250 us gap is a 1 bit
			# sync preamble of pulse, gap, 750 us each, repeated 4 times
     	 {   
       		name			=> 'Bresser 7009994',		
       		id          	=> '37',
			one				=> [2,-1],
			zero			=> [1,-2],
			start		 	=> [3,-3,3,-3],
			clockabs   		=> '250',		
			format     		=> 'twostate',  		# not used now
			preamble		=> 'W37#',				# prepend to converted message	
			clientmodule    => 'SD_WS', 
			length_min      => '40',
			length_max      => '41',
    	},
    "38" =>
      	 {   
       		name			=> 'weather38',		
       		id          	=> '38',
			one				=> [1,-10],
			zero			=> [1,-5],
			sync 			=> [1,-25],
			clockabs   		=> '360',		# not used now
			format     		=> 'twostate',  # not used now
			preamble		=> 's',			# prepend to converted message	 	
			postamble		=> '00',		# Append to converted message	 	
			clientmodule    => 'CUL_TCM97001',   # not used now
			#modulematch     => '^s[A-Fa-f0-9]+', # not used now
			length_min      => '32',
			length_max      => '32',
			paddingbits     => '8',			
    	},   
	"39" => ## X10 Protocol
		{
			name => 'X10 Protocol',
			id => '39',
			one => [1,-3],
			zero => [1,-1],
			start => [17,-7],
			clockabs => 560, 
			format => 'twostate', 
			preamble => '', # prepend to converted message
			clientmodule => 'RFXX10REC', # not used now
			#modulematch => '^TX......', # not used now
			length_min => '32',
			length_max => '44',
			paddingbits     => '8',		
			postDemodulation => \&SIGNALduino_lengtnPrefix,			
			filterfunc      => 'SIGNALduino_compPattern',
			
			
		},    
	"40" => ## Romotec
		{
			name => 'romotec',
			id => '40',
			one => [3,-2],
			zero => [1,-3],
			start => [1,-2],
			clockabs => 250, 
			preamble => 'u40#', # prepend to converted message
			#clientmodule => '', # not used now
			#modulematch => '', # not used now
			length_min => '10',
			length_min => '12',
			
		},    
	"41" => ## Elro (Smartwares) Doorbell DB200
		{
			name => 'elro doorbell',
			comment => 'Elro (Smartwares) Doorbell DB200',
			id => '41',
			zero => [1,-3],
			one => [3,-1],
			sync => [1,-15],
			clockabs => 450, 
			preamble => 'u41#', # prepend to converted message
			#clientmodule => '', # not used now
			#modulematch => '', # not used now
			length_min => '20',
		},     
	#"42" => ## MKT Multi Kon Trade  // Sollte eigentlich als MS ITv1 erkannt werden
	#	{
	#		name => 'MKT motionsensor',
	#		id => '42',
	#		zero => [1,-3],
	#		one => [3,-1],
	#		sync => [-28],
	#		clockabs => 550, 
	#		preamble => 'u42#', # prepend to converted message
	#		#clientmodule => '', # not used now
	#		#modulematch => '', 
	#		length_min => '24',
	#	},
	"43" => ## Somfy RTS
		{
			name 			=> 'Somfy RTS',
			id 				=> '43',
			clockrange  	=> [610,680],			# min , max
			format			=> 'manchester', 
			preamble 		=> 'Ys',
			clientmodule	=> 'SOMFY', # not used now
			modulematch 	=> '^Ys[0-9A-F]{14}',
			length_min 		=> '56',
			length_max 		=> '57',
			method          => \&SIGNALduino_SomfyRTS, # Call to process this message
			msgIntro		=> 'SR;P0=-2560;P1=2560;P3=-640;D=10101010101010113;',
			#msgOutro		=> 'SR;P0=-30415;D=0;',
			frequency		=> '10AB85550A',
		},
	"44" => ## Bresser Temeo Trend
		{
            		name 			=> 'BresserTemeo',
            		id 			=> '44',
            		clockabs		=> 500,
            		zero 			=> [4,-4],
            		one				=> [4,-8],
            		start	 		=> [8,-8],
            		preamble 		=> 'W44#',
            		clientmodule		=> 'SD_WS',
            		modulematch		=> '^W44#[A-F0-9]{18}',
            		length_min 		=> '64',
            		length_max 		=> '72',
		},
	"44.1" => ## Bresser Temeo Trend
		{
            		name 			=> 'BresserTemeo',
            		id 			=> '44',
            		clockabs		=> 500,
            		zero 			=> [4,-4],
            		one				=> [4,-8],
            		start 			=> [8,-12],
            		preamble 		=> 'W44x#',
            		clientmodule		=> 'SD_WS',
            		modulematch		=> '^W44x#[A-F0-9]{18}',
            		length_min 		=> '64',
            		length_max 		=> '72',
		},

    "45"  => #  Revolt 
			 #	MU;P0=-8320;P1=9972;P2=-376;P3=117;P4=-251;P5=232;D=012345434345434345454545434345454545454543454343434343434343434343434543434345434343434545434345434343434343454343454545454345434343454345434343434343434345454543434343434345434345454543454343434543454345434545;CP=3;R=2
		{
			name         => 'Revolt',
			id           => '45',
			one          => [2,-2],
			zero         => [1,-2],
			start        => [83,-3], 
			clockabs     => 120, 
			preamble     => 'r', # prepend to converted message
			clientmodule => 'Revolt', 
			modulematch  => '^r[A-Fa-f0-9]{22}', 
			length_min   => '84',
			length_max   => '120',	
			postDemodulation => sub {	my ($name, @bit_msg) = @_;	my @new_bitmsg = splice @bit_msg, 0,88;	return 1,@new_bitmsg; },
		},    
    "46"    => 
        {
            name			=> 'EKX1BE',	
			id          	=> '46',
			one				=> [1,-8],
			zero			=> [8,-1],
			clockabs     	=> 250,	# -1=auto	
			format 			=> 'twostate',	# not used now
			preamble		=> 'u46#',			
			#clientmodule    => '',   # not used now
			#modulematch     => '', # not used now
			length_min      => '16',
			length_max 		=> '18',
			
			},
   	"47"    => 			## maverick
		{
            name			=> 'Maverick protocol',	
			id          	=> '47',
			clockrange     	=> [180,260],                   
			format 			=> 'manchester',	
			preamble		=> 'P47#',						# prepend to converted message	
			clientmodule    => 'SD_WS_Maverick',   					
			modulematch     => '^P47#[569A]{12}.*',  					
			length_min      => '100',
			length_max      => '108',
			method          => \&SIGNALduino_Maverick,		# Call to process this message
			#polarity		=> 'invert'
		}, 			
     "48"    => 			## Joker Dostmann TFA
		{
            name			=> 'TFA Dostmann',	
			id          	=> '48',
			clockabs     	=> 250, 						# In real it is 500 but this leads to unprceise demodulation 
			one				=> [-4,6],
			zero			=> [-4,2],
			start			=> [-6,2],
			format 			=> 'twostate',	
			preamble		=> 'U48#',						# prepend to converted message	
			#clientmodule    => '',   						# not used now
			modulematch     => '^U48#.*',  					# not used now
			length_min      => '47',
			length_max      => '48',
		}, 			
	"49"    => 			## quigg / Aldi gt_9000
	# MU;P0=-563;P1=479;P2=991;P3=-423;P4=361;P5=-1053;P6=3008;P7=-7110;D=2345454523452323454523452323452323452323454545456720151515201520201515201520201520201520201515151567201515152015202015152015202015202015202015151515672015151520152020151520152020152020152020151515156720151515201520201515201520201520201520201515151;CP=1;R=21;
		{
            name			=> 'quigg_gt9000',	
			id          	=> '49',
			clockabs     	=> 400, 						
			one				=> [2,-1.2],
			zero			=> [1,-3],
			start			=> [6,-15],
			format 			=> 'twostate',	
			preamble		=> 'U49#',						# prepend to converted message	
			#clientmodule    => '',   						# not used now
			modulematch     => '^U49#.*',  					# not used now
			length_min      => '22',
			length_max      => '28',
		}, 
	"50"    => 			## Opus XT300
		{
      name			=> 'optus_XT300',	
			id          	=> '50',
			clockabs     	=> 500, 						
			zero			=> [3,-2],
			one				=> [1,-2],
		#	start			=> [1,-25],						# Wenn das startsignal empfangen wird, fehlt das 1 bit
			format 			=> 'twostate',	
			preamble		=> 'W50#',						# prepend to converted message	
			clientmodule    => 'SD_WS',   					# not used now
			modulematch     => '^W50#.*',  					# not used now
			length_min      => '47',
			length_max      => '48',
		},
	 "51"    => 
        {  # MS;P0=-16046;P1=552;P2=-1039;P3=983;P5=-7907;P6=-1841;P7=-4129;D=15161716171616161717171716161616161617161717171717171617171617161716161616161616171032323232;CP=1;SP=5;O;
		# https://github.com/RFD-FHEM/RFFHEM/issues/118
            name			=> 'weather51',		# Logilink, NC, WS, TCM97001 etc.
			comment			=> 'IAN 275901 Wetterstation Lidl',
			id          	=> '51',
			one				=> [1,-8],
			zero			=> [1,-4],
			sync			=> [1,-13],		
			clockabs   		=> '560',		# not used now
			format     		=> 'twostate',  # not used now
			preamble		=> 'W51#',		# prepend to converted message	 	
			postamble		=> '',			# Append to converted message	 	
			clientmodule    => 'SD_WS',   
			modulematch     => '^W51#.*',
			length_min      => '40',
			length_max      => '45',
        },
    "52"    => 			## Oregon PIR Protocol
		{
            name			=> 'OS_PIR',	
			id          	=> '52',
			clockrange     	=> [470,640],			# min , max
			format 			=> 'manchester',	    # tristate can't be migrated from bin into hex!
			clientmodule    => 'OREGON',
			modulematch     => '^u52#F{3}|0{3}.*',
			preamble		=> 'u52#',
			length_min      => '30',
			length_max      => '30',
			method          => \&SIGNALduino_OSPIR, # Call to process this message
			polarity        => 'invert',			
		}, 	
    
	"55"  => ##quigg gt1000
		{
            name			=> 'quigg_gt1000',	
			id          	=> '55',
			clockabs     	=> 300, 						
			zero			=> [1,-4],
			one				=> [4,-2],
			sync			=> [1,-8],						
			format 			=> 'twostate',	
			preamble		=> 'i',						# prepend to converted message	
			clientmodule    => 'IT',   					# not used now
			modulematch     => '^i.*',  					# not used now
			length_min      => '24',
			length_max      => '24',
		},	
	"56" => ##  Celexon
		{
			name			=> 'Celexon',	
			id          	=> '56',
			clockabs     	=> 200, 						
			zero			=> [1,-3],
			one				=> [3,-1],
			start			=> [25,-3],						
			format 			=> 'twostate',	
			preamble		=> 'u56#',						# prepend to converted message	
			#clientmodule    => ''	,   					# not used now
			modulematch     => '',  						# not used now
			length_min      => '56',
			length_max      => '68',
		},		
 		"57"    => 			## m-e doorbell
		{
            name			=> 'm-e',	
			id          	=> '57',
			clockrange     	=> [300,360],			# min , max
			format 			=> 'manchester',	    # tristate can't be migrated from bin into hex!
			clientmodule    => '',
			modulematch     => '^u57*',
			preamble		=> 'u57#',
			length_min      => '21',
			length_max      => '24',
			method          => \&SIGNALduino_MCRAW, # Call to process this message
			polarity        => 'invert',			
		}, 	 
  		"58"    => 			## tfa 30.3208.0 
		{
            name			=> 'tfa 30.3208.0 ',	
			id          	=> '58',
			clockrange     	=> [460,520],			# min , max
			format 			=> 'manchester',	    # tristate can't be migrated from bin into hex!
			clientmodule    => '',
			modulematch     => '^W58*',
			preamble		=> 'W58#',
			length_min      => '54',
			length_max      => '136',
			method          => \&SIGNALduino_MCTFA, # Call to process this message
			polarity        => 'invert',			
		}, 	 
		"59" => ##  AK-HD-4 remote
		{
			name			=> 'AK-HD-4',	
			id          	=> '59',
			clockabs     	=> 230, 						
			zero			=> [-4,1],
			one				=> [-1,4],
			start			=> [-1,37],						
			format 			=> 'twostate',	# tristate can't be migrated from bin into hex!
			preamble		=> 'u59#',			# Append to converted message	
			postamble		=> '',		# Append to converted message	 	
			#clientmodule    => '',   		# not used now
			modulematch     => '',  # not used now
			length_min      => '24',
			length_max      => '24',
		},			
	"60" =>	## ELV, LA CROSSE (WS2000/WS7000)
		{
			# MU;P0=32001;P1=-381;P2=835;P3=354;P4=-857;D=01212121212121212121343421212134342121213434342121343421212134213421213421212121342121212134212121213421212121343421343430;CP=2;R=53;
			# tested sensors:   WS-7000-20, AS2000, ASH2000, S2000, S2000I, S2001A, S2001IA,
			#                   ASH2200, S300IA, S2001I, S2000ID, S2001ID, S2500H 
			# not tested:       AS3, S2000W, S2000R, WS7000-15, WS7000-16, WS2500-19, S300TH, S555TH
			# das letzte Bit (1) und mehrere Bit (0) Preambel fehlen meistens
			#  ___        _
			# |   |_     | |___
			#  Bit 0      Bit 1
			# kurz 366 mikroSek / lang 854 mikroSek / gesamt 1220 mikroSek - Sollzeiten 
			name                 => 'WS2000',
			comment              => 'Series WS2000/WS7000 of various sensors',
			id                   => '60',
			one                  => [3,-7],	
			zero                 => [7,-3],
			clockabs             => 122,
			preamble             => 'K',        # prepend to converted message
			postamble            => '',         # Append to converted message
			clientmodule         => 'CUL_WS',   
			length_min           => '38',       # 46, letztes Bit fehlt = 45, 10 Bit Preambel = 35 Bit Daten
			length_max           => '82',
			postDemodulation     => \&SIGNALduino_postDemo_WS2000,
		}, 

	"61" =>	## ELV FS10
		# tested transmitter:   FS10-S8, FS10-S4, FS10-ZE
		# tested receiver:      FS10-ST, FS10-MS, WS3000-TV, PC-Wettersensor-Empfaenger
		# sends 2 messages with 43 or 48 bits in distance of 100 mS (on/off) , last bit 1 is missing
		# sends x messages with 43 or 48 bits in distance of 200 mS (dimm) , repeats second message
		# MU;P0=1776;P1=-410;P2=383;P3=-820;D=01212121212121212121212123212121232323212323232121212323232121212321212123232123212120;CP=2;R=74;
		{
			name   		=> 'FS10',
			comment        => 'Remote Control (434Mhz)',
			id		=> '61',
			one		=> [1,-2],
			zero		=> [1,-1],
			clockabs	=> 400,
			format 		=> 'twostate',
			preamble	=> 'P61#',      # prepend to converted message
			postamble	=> '',         # Append to converted message
			clientmodule	=> 'FS10',
			#modulematch	=> '',
			length_min	=> '38',	# eigentlich 41 oder 46 (Pruefsumme nicht bei allen)
			length_max      => '48',	# eigentlich 46
			
		}, 
	"62" => ## Clarus_Switch  
		{    #MU;P0=-5893;P4=-634;P5=498;P6=-257;P7=116;D=45656567474747474745656707456747474747456745674567456565674747474747456567074567474747474567456745674565656747474747474565670745674747474745674567456745656567474747474745656707456747474747456745674567456565674747474747456567074567474747474567456745674567;CP=7;O;
			name         => 'Clarus_Switch',
			id           => '62',
			one          => [3,-1],
			zero         => [1,-3],
			start        => [1,-35], # ca 30-40
			clockabs     => 189, 
			preamble     => 'i', # prepend to converted message
			clientmodule => 'IT', 
			#modulematch => '', 
			length_min   => '24',
			length_max   => '24',		
		},
	"63" => ## Warema MU
		{    #MU;P0=-2988;P1=1762;P2=-1781;P3=-902;P4=871;P5=6762;P6=5012;D=0121342434343434352434313434243521342134343436;
			name         => 'Warema',
			comment      => 'developId, is still experimental',
			id           => '63',
			developId    => 'y',
			one          => [1],
			zero         => [0],
			clockabs     => 800, 
			syncabs		 => '6700',# Special field for filterMC function
			preamble     => 'u63', # prepend to converted message
			#clientmodule => '', 
			#modulematch => '', 
			length_min   => '24',
			filterfunc   => 'SIGNALduino_filterMC',
		},
	"64" => ##  WH2 #############################################################################
		{
    # MU;P0=-32001;P1=457;P2=-1064;P3=1438;D=0123232323212121232123232321212121212121212323212121232321;CP=1;R=63;
    # MU;P0=-32001;P1=473;P2=-1058;P3=1454;D=0123232323212121232123232121212121212121212121232321212321;CP=1;R=51;
    #MU;P0=134;P1=-113;P3=412;P4=-1062;P5=1379;D=01010101013434343434343454345454345454545454345454545454343434545434345454345454545454543454543454345454545434545454345;CP=3;

			name         => 'WH2',
			id           => '64',
      one          => [1,-2],   
      zero			   => [3,-2], 
      clockabs     => 490,
      clientmodule    => 'SD_WS',  
			modulematch  => '^W64*',
			preamble     => 'W64#',       # prepend to converted message
			postamble    => '',           # Append to converted message       
			#clientmodule => '',
			length_min   => '48',
			length_max   => '54',
		},
	"65" => ## Homeeasy
		{
		# MS;P1=231;P2=-1336;P4=-312;P5=-8920;D=15121214141412121212141414121212121414121214121214141212141212141212121414121414141212121214141214121212141412141212;CP=1;SP=5;
			name         => 'HE_EU',
			comment      => 'Homeeasy',
			id           => '65',
			one          => [1,-5.5],
			zero         => [1,-1.2],
			sync         => [1,-38],
			clockabs     => 230,
			format       => 'twostate',  # not used now
			preamble     => 'ih',
			clientmodule => 'IT',
			length_min   => '57',
			postDemodulation => \&SIGNALduino_HE_EU,
		},
	"66" => ## TX2 Protocol (Remote Temp Transmitter & Remote Thermo Model 7035)
	# MU;P0=13312;P1=-2785;P2=4985;P3=1124;P4=-6442;P5=3181;P6=-31980;D=0121345434545454545434545454543454545434343454543434545434545454545454343434545434343434545621213454345454545454345454545434545454343434545434345454345454545454543434345454343434345456212134543454545454543454545454345454543434345454343454543454545454545;CP=3;R=73;O;
		{
			name         => 'WS7035',
			id           => '66',
			one          => [10,-52],
			zero         => [27,-52],
			start        => [-21,42,-21],
			clockabs     => 122,
			format       => 'pwm',  # not used now
			preamble     => 'TX',
			clientmodule => 'CUL_TX',
			modulematch  => '^TX......',
			length_min   => '43',
			length_max   => '44',
			postDemodulation => \&SIGNALduino_postDemo_WS7035,
		},
	"67" => ## TX2 Protocol (Remote Datalink & Remote Thermo Model 7053, 7054)
			# MU;P0=3381;P1=-672;P2=-4628;P3=1142;P4=-30768;D=010 2320232020202020232020232020202320232323202323202020202020202020 4 010 2320232020202020232020232020202320232323202323202020202020202020 0;CP=0;R=45;
			# MU;P0=1148;P1=3421;P6=-664;P7=-4631;D=161 7071707171717171707171707171717171707070717071717171707071717171 0;CP=1;R=29;
			# Message repeats 4 x with pause of ca. 30-34 mS
			#           __               ____
			#  ________|  |     ________|    |
			#      Bit 1             Bit 0
			#    4630  1220       4630   3420   mikroSek - mit Oszi gemessene Zeiten
			{
				name             => 'WS7053',	
				id               => '67',
				one              => [-38,10],     # -4636, 1220
				zero             => [-38,28],     # -4636, 3416
				clockabs         => 122,
				preamble         => 'TX',         # prepend to converted message
				clientmodule     => 'CUL_TX',
				modulematch      => '^TX......',
				length_min       => '32',
				length_max       => '34',
				postDemodulation => \&SIGNALduino_postDemo_WS7053,
			},
  "68" => ##  PFR-130 ###########################################################################
		{
    # MS;P0=-3890;P1=386;P2=-2191;P3=-8184;D=1312121212121012121212121012121212101012101010121012121210121210101210101012;CP=1;SP=3;R=20;O;
    # MS;P0=-2189;P1=371;P2=-3901;P3=-8158;D=1310101010101210101010101210101010121210121212101210101012101012121012121210;CP=1;SP=3;R=20;O;
			name         => 'PFR-130',
			id           => '68',
      		one				=> [1,-10],
			zero			=> [1,-5],
      		sync			=> [1,-21],	
			clockabs   		=> 380,		# not used now
      		preamble		=> 's',			# prepend to converted message	 	
			postamble		=> '00',		# Append to converted message	 	
			clientmodule    => 'CUL_TCM97001',   # not used now
     		length_min      => '24',
			length_max      => '42',
			paddingbits     => '8',				 # pad up to 8 bits, default is 4
		}, 	
	"69"    => ## Hoermann
	# MU;P0=-508;P1=1029;P2=503;P3=-1023;P4=12388;D=01010232323232310104010101010101010102323231010232310231023232323231023101023101010231010101010232323232310104010101010101010102323231010232310231023232323231023101023101010231010101010232323232310104010101010101010102323231010232310231023232323231023101;CP=2;R=37;O;
		{
			name            => 'Hoermann',
			id              => '69',
			zero            => [2,-1],
			one             => [1,-2],
			start           => [24,-1],
			clockabs        => 510,
			format          => 'twostate',  # not used now
			#clientmodule    => '',
			#modulematch     => '^U69*',
			preamble        => 'U69#',
			length_min      => '40',
			#length_max      => '90',
			postDemodulation => \&SIGNALduino_postDemo_Hoermann,	# Call to process this message
		},
	"70" => ## FHT80TF (Funk-Tuer-Fenster-Melder FHT 80TF und FHT 80TF-2)
	# closed MU;P0=-24396;P1=417;P2=-376;P3=610;P4=-582;D=012121212121212121212121234123434121234341212343434121234123434343412343434121234341212121212341212341234341234123434;CP=1;R=35;
	# open   MU;P0=-21652;P1=429;P2=-367;P4=634;P5=-555;D=012121212121212121212121245124545121245451212454545121245124545454512454545121245451212121212124512451245451245121212;CP=1;R=38;
		{
			name         	=> 'FHT80TF',
			comment		   => 'Door/Window switch (868Mhz)',
			id           	=> '70',
			one         	=> [1.5,-1.5],	# 600
			zero         	=> [1,-1],	# 400
			clockabs     	=> 400,
			format          => 'twostate',  # not used now
			clientmodule    => 'CUL_FHTTK',
			preamble     	=> 'T',
			length_min     => '50',
			length_max     => '58',
			postDemodulation => \&SIGNALduino_postDemo_FHT80TF,
		},
	"71" => ## PV-8644 infactory Poolthermometer
		# MU;P0=1735;P1=-1160;P2=591;P3=-876;D=0123012323010101230101232301230123010101010123012301012323232323232301232323232323232323012301012;CP=2;R=97;
		{
			name		=> 'PV-8644',
			comment		=> 'infactory Poolthermometer',
			id         	=> '71',
			clockabs	=> 580,
			zero		=> [3,-2],
			one		=> [1,-1.5],
			format		=> 'twostate',	
			preamble	=> 'W71#',		# prepend to converted message	
			clientmodule    => 'SD_WS',
			#modulematch     => '^W71#.*'
			length_min      => '48',
			length_max      => '48',
		},
	# MU;P0=-760;P1=334;P2=693;P3=-399;P4=-8942;P5=4796;P6=-1540;D=01010102310232310101010102310232323101010102310101010101023102323102323102323102310101010102310232323101010102310101010101023102310231023102456102310232310232310231010101010231023232310101010231010101010102310231023102310245610231023231023231023101010101;CP=1;R=45;O;
    # MU;P0=-8848;P1=4804;P2=-1512;P3=336;P4=-757;P5=695;P6=-402;D=0123456345656345656345634343434345634565656343434345634343434343456345634563456345;CP=3;R=49;
    		
	"72" => # Siro blinds MU    @Dr. Smag
		{
			name			=> 'Siro shutter',
			comment         => 'developModule. Siro is not in github or SVN available',
			id				=> '72',
			developId		=> 'm',
			dispatchequals  =>  'true',
			one				=> [2,-1.2],    # 680, -400
			zero			=> [1,-2.2],    # 340, -750
			start			=> [14,-4.4],   # 4800,-1520
			clockabs		=> 340,
			format 			=> 'twostate',	  		
			preamble		=> 'P72#',		# prepend to converted message	
			clientmodule	=> 'Siro',
			#modulematch 	=> '',  			
			length_min   	=> '39',
			length_max   	=> '40',
			msgOutro		=> 'SR;P0=-8500;D=0;',
		},
 	
 	# MS;P0=4803;P1=-1522;P2=333;P3=-769;P4=699;P5=-393;P6=-9190;D=2601234523454523454523452323232323452345454523232323452323232323234523232345454545;CP=2;SP=6;R=61;
 	"72.1" => # Siro blinds MS     @Dr. Smag
		{
			name			=> 'Siro shutter',
			comment     	=> 'developModule. Siro is not in github or SVN available',
			id				=> '72',
			developId		=> 'm',
			dispatchequals  =>  'true',
			one				=> [2,-1.2],    # 680, -400
			zero			=> [1,-2.2],    # 340, -750
			sync			=> [14,-4.4],   # 4800,-1520
			clockabs		=> 340,
			format 			=> 'twostate',	  		
			preamble		=> 'P72#',		# prepend to converted message	
			clientmodule	=> 'Siro',
			#modulematch 	=> '',  			
			length_min   	=> '39',
			length_max   	=> '40',
			#msgOutro	=> 'SR;P0=-8500;D=0;',
		},
	"73" => ## FHT80 - Raumthermostat (868Mhz),  @HomeAutoUser
		{
			name		=> 'FHT80',
			comment 	=> 'Roomthermostat (868Mhz only receive)',
			id		=> '73',
			developId	=> 'y',
			one		=> [1.5,-1.5], # 600
			zero		=> [1,-1], # 400
			pause			=> [-25],
			clockabs	=> 400,
			format		=> 'twostate', # not used now
			clientmodule	=> 'FHT',
			preamble	=> '810c04xx0909a001',
			length_min	=> '59',
			length_max	=> '67',
			postDemodulation => \&SIGNALduino_postDemo_FHT80,
		},
	"74" => ## FS20 - 'Remote Control (868Mhz),  @HomeAutoUser
		{
			name			=> 'FS20',
			comment			=> 'Remote Control (868Mhz only receive)',
			id			=> '74',
			developId		=> 'y',
			one			=> [1.5,-1.5], # 600
			zero			=> [1,-1], # 400
			pause			=> [-25],
			clockabs		=> 400,
			format			=> 'twostate', # not used now
			clientmodule		=> 'FS20',
			preamble		=> '810b04f70101a001',
			length_min		=> '50',
			length_max		=> '67',
			postDemodulation => \&SIGNALduino_postDemo_FS20,
		},
	"75" => ## ConradRSL2 @litronics https://github.com/RFD-FHEM/SIGNALDuino/issues/69
		# MU;P0=-1365;P1=477;P2=1145;P3=-734;P4=-6332;D=01023202310102323102423102323102323101023232323101010232323231023102323102310102323102423102323102323101023232323101010232323231023102323102310102323102;CP=1;R=12;
		{
			name			=> 'ConradRSL2', 
			id			=> '75',
			one			=> [3,-1],
			zero			=> [1,-3],
			clockabs		=> 500, 
			format			=> 'twostate', 
			clientmodule		=> 'SD_RSL',
			preamble		=> 'P1#',  
			modulematch		=> '^P1#[A-Fa-f0-9]{8}', 
			length_min		=> '32',
			length_max 		=> '40',
		},
	"76" => ##  Kabellose LED-Weihnachtskerzen XM21-0
		{
			name			=> 'xm21',
			comment			=> 'reserviert, LED Lichtrekette on',
			id				=> '76',
			developId		=> 'p',
			one				=> [1.2,-2], # 120,-200
			zero			=> [],   # existiert nicht
			start           => [4.5,-2], # 450,-200 Starsequenz
			clockabs		=> 100,
			format			=> 'twostate', # not used now
			clientmodule	=> '',
			preamble		=> 'P76',
			length_min		=> 64,
			length_max		=> 64,
		},
	"76.1" => ##  Kabellose LED-Weihnachtskerzen XM21-0
		{
			name			=> 'xm21',
			comment			=> 'reserviert, LED Lichtrekette off',
			id				=> '76.1',
			developId		=> 'p', 
			one				=> [1.2,-2], # 120,-200
			zero			=> [],   # existiert nicht
			start           => [4.5,-2], # 450,-200 Starsequenz
			clockabs		=> 100,
			format			=> 'twostate', # not used now
			clientmodule	=> '',
			preamble		=> 'P76',
			length_min		=> 58,
			length_max		=> 58,
		},
		#.MU;P0=102;P1=236;P2=-2192;P3=971;P6=-21542;D=01230303030103010303030303010103010303010303010101030301030103030303010101030301030303010163030303010301030303030301010301030301030301010103030103010303030301010103030103030301016303030301030103030303030101030103030103030101010303010301030303030101010303;CP=0;O;.
		#.MU;P0=-1483;P1=239;P2=970;P3=-21544;D=01020202010132020202010201020202020201010201020201020201010102020102010202020201010102020102020201013202020201020102020202020101020102020102020101010202010201020202020101010202010202020101;CP=1;.
		#.MU;P0=-168;P1=420;P2=-416;P3=968;P4=-1491;P5=242;P6=-21536;D=01234343434543454343434343454543454345434543454345434343434343434343454345434343434345454363434343454345434343434345454345434543454345434543434343434343434345434543434343434545436343434345434543434343434545434543454345434543454343434343434343434543454343;CP=3;O;.
		#.MU;P0=-1483;P1=969;P2=236;P3=-21542;D=01010102020131010101020102010101010102020102010201020102010201010101010101010102010201010101010202013101010102010201010101010202010201020102010201020101010101010101010201020101010101020201;CP=1;.
		#.MU;P0=-32001;P1=112;P2=-8408;P3=968;P4=-1490;P5=239;P6=-21542;D=01234343434543454343434343454543454345454343454345434343434343434343454345434343434345454563434343454345434343434345454345434545434345434543434343434343434345434543434343434545456343434345434543434343434545434543454543434543454343434343434343434543454343;CP=3;O;.
		#.MU;P0=-1483;P1=968;P2=240;P3=-21542;D=01010102020231010101020102010101010102020102010202010102010201010101010101010102010201010101010202023101010102010201010101010202010201020201010201020101010101010101010201020101010101020202;CP=1;.
		#.MU;P0=-32001;P1=969;P2=-1483;P3=237;P4=-21542;D=01212121232123212121212123232123232121232123212321212121212121212123212321212121232123214121212123212321212121212323212323212123212321232121212121212121212321232121212123212321412121212321232121212121232321232321212321232123212121212121212121232123212121;CP=1;O;.
		#.MU;P0=-1485;P1=967;P2=236;P3=-21536;D=010201020131010101020102010101010102020102020101020102010201010101010101010102010201010101020102013101010102010201010101010202010202010102010201020101010101010101010201020101010102010201;CP=1;.
	"77" => ##  https://github.com/juergs/NANO_DS1820_4Fach		
		{
			name			=> 'NANO_DS1820_4Fach',
			comment			=> 'Seltbau Sensor',
			id				=> '77',
			developId		=> 'y', 
			zero			=> [4,-6], 		#
			one				=> [1,-6],   	# 
			clockabs     	=> 250,			# 
			format 			=> 'pwm',	    # 
			preamble		=> 'TX',		# prepend to converted message	
			clientmodule    => 'CUL_TX',   	# not used now
			modulematch     => '^TX......', # not used now
			length_min      => '43',
			length_max      => '44',
			remove_zero     => 1,           # Removes leading zeros from output
		},
	"78" => # MU;P0=313;P1=1212;P2=-309;P4=-2024;P5=-16091;P6=2014;D=01204040562620404626204040404040462046204040562620404626204040404040462046204040562620404626204040404040462046204040562620404626204040404040462046204040;CP=0;R=236;)
			# https://forum.fhem.de/index.php/topic,39153.0.html		
		{
			name			=> 'geiger',
			comment			=> 'geiger blind motors',
			id				=> '78',
			developId		=> 'y', 
			zero			=> [1,-6.6], 		
			one				=> [6.6,-1],   		 
			start  			=> [-53],		
			clockabs     	=> 300,					 
			format 			=> 'twostate',	     
			preamble		=> 'u78#',			# prepend to converted message	
			clientmodule    => 'SIGNALduino_un',   	
			#modulematch	=> '^TX......', 
			length_min      => '14',
			length_max      => '18',
			paddingbits     => '2'				 # pad 1 bit, default is 4
		},
	"79" => ##  MU;P0=656;P1=-656;P2=335;P3=-326;P4=-5024;D=01230121230123030303012423012301212301230303030124230123012123012303030301242301230121230123030303012423012301212301230303030124230123012123012303030301242301230121230123030303012423012301212301230303030124230123012123012303030301242301230121230123030303;CP=2;O;
			# https://github.com/RFD-FHEM/SIGNALDuino/issues/84
		{
			name		=> 'VTX-BELL_Funkklingel',
			#comment	=> '',
			id		=> '79',
			zero		=> [-2,1], 	#
			one		=> [-1,2],   	# 
			start  		=> [-15,1],	#
			clockabs     	=> 330,
			format 		=> 'twostate',	    # 
			preamble	=> 'U79#',	# prepend to converted message	
			#clientmodule    => '',   	# not used now
			#modulematch     => '^TX......', # not used now
			length_min      => '12',
			#length_max      => '44',
		},
	"80" => ## EM (Energy-Monitor) Funkprotokoll (868Mhz),  @HomeAutoUser | Derwelcherichbin
		{
			# MU;P1=-417;P2=385;P3=-815;P4=-12058;D=42121212121212121212121212121212121232321212121212121232321212121212121232323212323212321232121212321212123232121212321212121232323212121212121232121212121212121232323212121212123232321232121212121232123232323212321;CP=2;R=87;
			#- MU;P0=32001;P1=-419;P2=376;P3=-824;P4=-12056;D=012121212121212121212121212121212123232121212121212123232121212121212123232321232321232123212121232121212323212121232121212123232321212121212123212121212121212123232321212121212323232123212121212123212323232321232124;CP=2;R=87;w=0
			
			name			=> 'EM (Energy-Monitor)',
			comment		=> 'EM (Energy-Monitor) (868Mhz)',
			id				=> '80',
			developId	=> 'y',
			one			=> [1,-2],	# 800
			zero			=> [1,-1],	# 400
			clockabs		=> 400,
			format			=> 'twostate', # not used now
			clientmodule	=> 'CUL_EM',
			preamble			=> 'E',
			length_min		=> '104',
			length_max		=> '114',
			postDemodulation => \&SIGNALduino_postDemo_EM,
		},
	"81" => # Remote SA-434-1
		{
			# MU;P0=-1756;P1=112;P2=-11752;P3=496;P4=-495;P5=998;P6=-988;P7=-17183;D=0123454545634545456345634563734545456345454563456345637345454563454545634563456373454545634545456345634563734545456345454563456345637345454563454545634563456373454545634545456345634563734545456345454563456345637345454563454545634563456373454545634545456;CP=3;R=0;

			name             => 'SA-434-1',
			comment          => 'Remote control SA-434-1 mini 923301',
			id               => '81',
			one              => [-2,1],
			zero             => [-1,2],
			start            => [-35,1],		# Message is not provided as MS, worakround is start
			clockabs		 => 500,                 
			format           => 'twostate',
			preamble	     => 'u81#',			# prepend to converted message	
			#clientmodule	 => 'SD_UT', 
			length_min       => '12',
			length_max       => '12',
		},
	"82" => ## Fernotron shutters and light switches   
			# MU;P0=-32001;P1=435;P2=-379;P4=-3201;P5=831;P6=-778;D=01212121212121214525252525252521652161452525252525252161652141652521652521652521614165252165252165216521416521616165216525216141652161616521652165214165252161616521652161416525216161652161652141616525252165252521614161652525216525216521452165252525252525;CP=1;O;
			# the messages received are usual missing 12 bits at the end for some reason. So the checksum byte is missing.
			# Fernotron protocol is unidirectional. Here we can only receive messages from controllers send to receivers. 
		{
			name           => 'Fernotron',
			id             => '82',       # protocol number
			developId      => 'm',
			one            => [1,-2],     # on=400us, off=800us
			zero           => [2,-1],     # on=800us, off=400us
			float          => [1,-8],     # on=400us, off=3200us. each 10bit word has one [1,-8] in front
			clockabs       => 400,        # 400us
			preamble       => 'P82#',     # prepend our protocol number to converted message
			clientmodule   => 'Fernotron',
			length_min     => '100',      # actual 120 bit (12 x 10bit words to decode 6 bytes data), but last 20 are for checksum
			length_max     => '3360',     # 3360 bit (336 x 10bit words to decode 168 bytes data) for full timer message
	    },
);