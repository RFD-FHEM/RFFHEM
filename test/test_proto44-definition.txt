defmod test_proto44 UnitTest dummyDuino ( 
{ 
 my $rmsg="MU;P0=32001;P1=-1939;P2=1967;P3=3896;P4=-3895;D=01213424242124212121242121242121212124212424212121212121242421212421242121242124242421242421242424242124212124242424242421212424212424212121242121212;CP=2;R=39;";      
 my %signal_parts=SIGNALduino_Split_Message($rmsg,$targetHash->{NAME});     
 is(SIGNALduino_Parse_MU($targetHash, $targetHash, $targetHash->{NAME}, $rmsg,%signal_parts) ,1,"MU Data dispatched");
 my $mock = Mock::Sub->new; 	
 my $SD_Dispatch = $mock->mock("SIGNALduno_Dispatch");  	
 SIGNALduino_Parse_MU($targetHash, $targetHash, $targetHash->{NAME}, $rmsg,%signal_parts);
 is( ($SD_Dispatch->called_with)[4], "44", "SIGNALduno_Dispatch check id" );
 is( ($SD_Dispatch->called_with)[2], "W44#D12160652EDE9F9B10", "SIGNALduno_Dispatch check dmsg" );
 my $sensorname="BresserTemeo_1";
 ok(!IsDevice($sensorname), "check Sensor not created with single dispatch");
 $SD_Dispatch->unmock;
 sleep 3;
 SIGNALduino_Parse_MU($targetHash, $targetHash, $targetHash->{NAME}, $rmsg,%signal_parts);
 ok(IsDevice($sensorname), "check Sensor created with second dispatch");
 
 subtest 'Checking readings' => sub {
   plan tests => 5;
   sleep 3;
   SIGNALduino_Parse_MU($targetHash, $targetHash, $targetHash->{NAME}, $rmsg,%signal_parts);
   is(ReadingsVal($sensorname,"temperature","0"),"3.2","check temperature reading without leading 0");
   is(ReadingsVal($sensorname,"humidity","0"),"68","check humidity reading");
   is(ReadingsVal($sensorname,"batteryState","0"),"ok","check battery reading");
   is(ReadingsVal($sensorname,"channel","1"),"1","check battery reading");
   is(InternalVal($sensorname,$target."_Protocol_ID","undef"),"44","check protocolid internal");
 }
} 
)
