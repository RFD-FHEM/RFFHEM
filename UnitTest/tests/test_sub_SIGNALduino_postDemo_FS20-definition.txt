defmod test_sub_SIGNALduino_postDemo_FS20 UnitTest dummyDuino ( 
{ 
	use Test2::V0;
	use Test2::Tools::Compare qw{ is };

	# note: sub SIGNALduino_postDemo_FS20 use binStr2hexStr

	subtest 'Tests postDemo_FS20' => sub {
		plan(4);

		subtest 'Test good message' => sub {
			plan(2);

			# MS;P1=-354;P2=449;P3=646;P4=-558;P5=-10408;D=2521212121212121212121212134212121343421212121213421213421212121212121212121212121212121342121212134213434342134342134;CP=2;SP=5;R=15;O;
			my @bits=qw(0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 1 1 0 1 1 0 1);

			my ($rcode,@bits)=SIGNALduino_postDemo_FS20($target, @bits);
			is($rcode,1, 'check returncode for good message');
			is(join("",@bits),'0001100001001000000000000000000000010000','check result for good message');
		};
		

		my $return;

		subtest 'Test bad message, all bit are zeros' => sub {
			plan(2);

			# MS;P1=-354;P2=449;P3=646;P4=-558;P5=-10408;D=2521212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121;CP=2;SP=5;R=15;O;
			my @bits=qw(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0);

			my ($rcode,$return)=SIGNALduino_postDemo_FS20($target, @bits);
			is($rcode,0, 'check returncode for bad message, all bit are zeros');
			is($return,undef,'check result for bad message, all bit are zeros');
		};


		subtest 'Test bad message, Detection aborted' => sub {
			plan(2);

			my @bits=qw(0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 1);

			my ($rcode,$return)=SIGNALduino_postDemo_FS20($target, @bits);
			is($rcode,0, 'check returncode for bad message, Detection aborted');
			is($return,undef,'check result for bad message, Detection aborted');
		};


		subtest 'Test bad message, wrong length' => sub {
			plan(2);

			my @bits=qw(0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0);

			my ($rcode,$return)=SIGNALduino_postDemo_FS20($target, @bits);
			is($rcode,0, 'check returncode for bad message, wrong length');
			is($return,undef,'check result for bad message, wrong length');
		};
	};
}
)