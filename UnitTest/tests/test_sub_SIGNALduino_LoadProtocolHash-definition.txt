defmod test_sub_SIGNALduino_LoadProtocolHash UnitTest dummyDuino 
(
 {
    use Test2::V0;
    use Test2::Tools::Compare qw{ is };

    plan(3);

    subtest 'Check filename and filetype' => sub {
			plan(2);

			my $LoadResult = $targetHash->{protocolObject}->LoadHash(qq[$attr{global}{modpath}/FHEM/lib/SD_ProtocolNothing.pm]);
			ok($LoadResult =~ m/^File ./FHEM/lib/SD_ProtocolNothing.pm does not exists/,'wrong filename or does not exists');

			#$LoadResult = $targetHash->{protocolObject}->LoadHash(qq[$attr{global}{modpath}/FHEM/lib/SD_ProtocolData.txt]);
			#is($LoadResult,undef,'load wrong filetype');

			$LoadResult = $targetHash->{protocolObject}->LoadHash(qq[$attr{global}{modpath}/FHEM/lib/SD_ProtocolData.pm]);
			is($LoadResult,undef,'right filename and syntax ok');
		};

    subtest 'Check good SD_PROTOCL_DATA' => sub {
    	plan(1);

			my $LoadResult = $targetHash->{protocolObject}->LoadHash(qq[$attr{global}{modpath}/FHEM/lib/test_loadprotohash-ok.pm]);
			is($LoadResult,undef,'load test protocol hash');
    };


    subtest 'Check bad SD_PROTOCL_DATA' => sub {
    	plan(1);

    	my $LoadResult = $targetHash->{protocolObject}->LoadHash(qq[$attr{global}{modpath}/FHEM/lib/test_loadprotohash-nok.pm]);
			ok($LoadResult =~ m/syntax error/, 'filename ok and syntax file not ok');
    };


		our %ProtocolListSIGNALduino = $targetHash->{protocolObject}->LoadHash(qq[$attr{global}{modpath}/FHEM/lib/SD_ProtocolData.pm]);

    SIGNALduino_IdList("x:$target","","","");
 }
);
