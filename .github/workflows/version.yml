name: VersionReplace

on:  pull_request
jobs:
  metadata:
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      date: ${{ steps.date.outputs.date }}
      datetime: ${{ steps.date.outputs.datetimestr }}
    runs-on: ubuntu-latest
    steps:
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          output: ','
      - name: test
        run: |
          cat $HOME/files.json
          cat $HOME/files_modified.json
          cat $HOME/files_added.json
          cat $HOME/files_removed.json
          echo '${{ steps.file_changes.outputs.files}}'
          echo '${{ steps.file_changes.outputs.files_modified}}'
          echo '${{ steps.file_changes.outputs.files_added}}'
          echo '${{ steps.file_changes.outputs.files_removed}}'
          echo "::set-output name=files_modified::${{ steps.file_changes.outputs.files_modified }}"
      - name: Get current date
        id: date
        run: |
          echo "::set-output name=date::$(date +'%Y%m%d')"
          echo "::set-output name=datetimestr::$(date +'%Y-%m-%d %T')"
      - name: Set matrix for build
        id: set-matrix
        run: |
          JSON="{\"include\":["

          # Loop by lines
          IFS=, read -ra values <<< "${{ steps.file_changes.outputs.files_modified}}"
          for v in "${values[@]}"
          do
            # Add build to the matrix only if it is not already included
            JSONline="{\"file\": \"$v\"},"
            if [[ "$JSON" != *"$JSONline"* ]]; then
              JSON="$JSON$JSONline"
            fi
          done

          # Remove last "," and add closing brackets
          if [[ $JSON == *, ]]; then
            JSON="${JSON%?}"
          fi
          JSON="$JSON]}"
          echo $JSON

          # Set output
          echo "::set-output name=matrix::$( echo "$JSON" )"
  modify:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: metadata
    strategy:
      matrix: ${{ fromJson(needs.metadata.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        if: endsWith(matrix.file, '.pm')
      - name: Update SDUINO_VERSION date
        if: endsWith(matrix.file, '00_SIGNALduino.pm')
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: \w+\s+=>\s\'\d.\d.\d\+\d+\'
          replace: "SDUINO_VERSION                  => '3.5.2+${{ needs.metadata.outputs.date }}'"
          include: "${{ matrix.file }}"
      - name: Update Date in ID line
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: \d\d\d\d-\d\d-\d\d\s\d\d:\d\d:\d\dZ\s\w+\s\$$
          replace: "${{ needs.metadata.outputs.datetime }}Z ${{ github.event.pull_request.user.login }} $"
          include: "${{ matrix.file }}"
      - name: Save updated Files in artifacts
        uses: actions/upload-artifact@v2
        with:
          name: updated-files
          path: |
            ${{ matrix.file }}
  commit:
    runs-on: ubuntu-latest
    needs: modify
    steps: 
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Download all modified artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace	}}
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ${{ github.workspace	}}
      - name: replace files from artifacts
        run: |
          for FPATH in ~/updated-files/*.pm; do 
              echo "$FPATH"
              FILE=$(basename $FPATH)
              echo "$FILE"
              find ./FHEM -name "$FILE" -exec cp $FPATH "{}" \;
          done
      - name: git commit back
        run: |
          git config --global user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Update Versiondate" -a || true
      - name: git push
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ github.head_ref }}
