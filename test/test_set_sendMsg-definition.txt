defmod test_set_sendMsg UnitTest dummyDuino 
(
 {
    my %mockData = (
    '0'    => 
		{	
			input	=>	"P0#0101#R3#C500",
			output 	=> 	'SR;R=3;P0=500;P1=-8000;P2=-3500;P3=-1500;D=0103020302;',
		},
    '17'    => 
		{	
			input	=>	"P17#0101#R3#C500",
			output 	=> 	'SR;R=3;P0=500;P1=-5000;P2=-2500;P3=-500;P4=-20000;D=01030202030302020304;',
		},
    '43'    => 
		{	
			input	=>	"P43#0101#R3#C500",
			output 	=> 	'SC;R=3;SR;P0=-2560;P1=2560;P3=-640;D=10101010101010113;SM;C=895;D=0101;',
		},
    '72'    => 
		{	
			input	=>	"P72#0101#R3#C500",
			output 	=> 	'SR;R=3;P0=7000;P1=-2200;P2=1000;P3=-600;P4=500;P5=-1100;D=0145234523;',
		},
	);

	my $mock = Mock::Sub->new;
 	my $AddSendQueuefn = $mock->mock('SIGNALduino_AddSendQueue');

	foreach my $id (qw/0 17 43 72/) 
	{
		subtest "checking set sendMsg id: $id " => sub {
			plan tests => 1;	
			$AddSendQueuefn->reset();
			
			
			SIGNALduino_Set($targetHash,$target,"sendMsg",$mockData{$id}{input});
			if ($AddSendQueuefn->called)
			{
				is( ($AddSendQueuefn->called_with)[1], $mockData{$id}{output}, 'check send command send to SIGNALduino_AddSendQueue' ) || diag(explain $AddSendQueuefn);
			} 
		};
	
	};
		
 }
);
    