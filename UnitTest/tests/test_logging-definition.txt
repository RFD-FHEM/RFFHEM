defmod test_logging UnitTest dummyDuino ( 
{ 
my $mock = Mock::Sub->new;
CommandAttr(undef,"$target eventlogging 0");
my $DoTrigger = $mock->mock("DoTrigger");

subtest "Check logMethod with with attr eventlogging 0" => sub {
	CommandAttr(undef,"$target eventlogging 0");
	is ($targetHash->{logMethod},\&::Log3,"Check {logMethod} points to ::Log3");
	my $logmsg = "check with eventlogging=0";
	$DoTrigger->reset();
	$targetHash->{logMethod}->($targetHash, 2, $logmsg);
	is($DoTrigger->called_count, 0, "check if DoTrigger is not called from Log3 ");
};
subtest "Check logMethod with attr eventlogging 1" => sub {

	CommandAttr(undef,"$target eventlogging 1");
	my $logmsg = "check with eventlogging=1";
	is ($targetHash->{logMethod},\&::SIGNALduino_Log3,"Check {logMethod} points to ::SIGNALduino_Log3");
	$DoTrigger->reset();
	$targetHash->{logMethod}->($targetHash, 2, $logmsg);

	is($DoTrigger->called_count, 1, "check if DoTrigger is called from SIGNALduino_Log3");
};

} 
)