(
	"9999"	=> 
		{
			name			=> 'Unittest Protocol with developId=m',
			comment			=> 'ony for running automated tests',
			id				=> '9999',
			developId		=> 'm',
			modulematch		=> '^X[A-Fa-f0-9]+',
        },
	"9998"	=>
		{
			name			=> 'Unittest Protocol  with developId=m',
			comment			=> 'ony  for running automated tests',
			id				=> '9998',
			developId		=> 'm',
        },
	"9997"	=>
		{
			name			=> 'Unittest Protocol  with developId=y',
			comment			=> 'ony for running automated tests',
			id				=> '9997',
			developId		=> 'y',
        },
	"9996"	=>
		{
			name			=> 'Unittest Protocol  with developId=p',
			comment			=> 'ony for running automated tests',
			id				=> '9996',
			developId		=> 'p',
        },
	"9995"	=>
		{
			name			=> 'Unittest MS Protocol',
			comment			=> 'ony for running automated tests',
			id				=> '9995',
			one				=> [-2,1],
			zero			=> [-1,2],
			sync			=> [-10,1],
			clockabs		=> 400,
			format			=> 'twostate',	#
			preamble		=> '#',			# prepend to converted message
			length_min		=> '32',
			length_max		=> '36',
			test_data		=> 	{ 
									test_MS_2 => [
										{
											desc	=>	"ms signal without reconstruct at end of signal", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;D=45412123434123412123434341234123434121234123412121212121234343434121234343;CP=4;SP=5;",
											output	=>	[1,1,9995,"#34EB281E6"],
										},
										{
											desc	=>	"ms signal without reconstruct at middle of signal", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;P6=5000;D=454121234341234121234343412341234341212341234121212121212343434341212343436;CP=4;SP=5;",
											output	=>	[1,1,9995,"#34EB281E6"],
										},
										{
											desc	=>	"ms signal without reconstruct and 31 bits (to short)", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;P6=5000;D=45412123434123412123434341234123434121234123412121212121234343434141;CP=4;SP=5;",
											output	=>	[0],
										},
										{
											desc	=>	"ms signal without reconstruct and 37 bits (to long)", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;P6=5000;D=45412123434123412123434341234123434121234123412121212121234343434121234343434;CP=4;SP=5;",
											output	=>	[0],
										},

									],
								},
		},
	"9994"	=>
		{
			name			=> 'Unittest MS Protocol',
			comment			=> 'ony for running automated tests',
			id				=> '9994',
			one				=> [-2,1],
			zero			=> [-1,2],
			sync			=> [-10,1],
			clockabs		=> 400,
			format			=> 'twostate',	#
			preamble		=> '#',			# prepend to converted message
			length_min		=> '32',
			length_max		=> '36',
			reconstructBit	=> 1,
			test_data		=> 	{ 
									test_MS_2 => [
										{
											desc	=>	"ms signal with reconstruct at end of signal", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;D=45412123434123412123434341234123434121234123412121212121234343434121234343;CP=4;SP=5;",
											output	=>	[1,1,9994,"#34EB281E7"],
										
										},
										{
											desc	=>	"ms signal with reconstruct at middle of signal", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;P6=5000;D=454121234341234121234343412341234341212341234121212121212343434341212343436;CP=4;SP=5;",
											output	=>	[1,1,9994,"#34EB281E7"],
										},
										{
											desc	=>	"ms signal with reconstruct 32  bits (long enough)", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;P6=5000;D=45412123434123412123434341234123434121234123412121212121234343434141;CP=4;SP=5;",
											output	=>	[1,1,9994,"#34EB281E"],
										},
										{
											desc	=>	"ms signal with reconstruct 31  bits (to short)", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;P6=5000;D=454121234341234121234343412341234341212341234121212121212343434341;CP=4;SP=5;",
											output	=>	[0],
										},
										{
											desc	=>	"ms signal with reconstruct and 37 bits (to long)", 
											input	=>	"MS;P1=-403;P2=813;P3=-812;P4=396;P5=-4005;P6=5000;D=4541212343412341212343434123412343412123412341212121212123434343412123434343;CP=4;SP=5;",
											output	=>	[0],
										},

									]
								},
		},
	"9993"	=>			
		{
			name			=> 'Unittest MS Protocol with float',
			comment			=> 'ony for running automated tests',
			id				=> '9993',
			one				=> [3.5,-1],
			zero			=> [1,-3.8],
			float			=> [1,-1],			# fuer Gruppentaste (nur bei ITS-150,ITR-3500 und ITR-300), siehe Kommentar in sub SIGNALduino_bit2itv1
			sync			=> [1,-44],
			clockabs		=> -1,				# -1=auto
			format			=> 'twostate',
			preamble		=> '#',				# prepend to converted message
			length_min		=> '24',
			length_max		=> '24',			# Don't know maximal lenth of a valid message
			postDemodulation	=> \&SIGNALduino_bit2itv1,
			test_data		=> 	{ 
						test_MS_2 => [
							{
								desc	=>	"ms signal with float at end of signal", 
								input	=>	" MS;P1=309;P2=-1130;P3=1011;P4=-429;P5=-11466;D=15123412121234123412141214121412141212123412341214;CP=1;SP=5;R=38;",
								output	=>	[1,1,9993,"#455515"],
							
							},
						]
					},
			
		},
		
);